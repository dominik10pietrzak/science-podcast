[{"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\index.tsx":"1","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\store.js":"3","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\App.tsx":"4","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\userReducers.ts":"5","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\podcastReducers.ts":"6","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\navbar.tsx":"7","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\footer.tsx":"8","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\homepage.tsx":"9","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\contact.tsx":"10","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\weather.tsx":"11","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Register.tsx":"12","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\UserPanel.tsx":"13","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Login.tsx":"14","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\userActions.ts":"15","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\message-form.tsx":"16","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\current-weather.tsx":"17","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Comments.tsx":"18","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\forecast.tsx":"19","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Loader.tsx":"20","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Message.tsx":"21","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\podcastActions.ts":"22","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\player.tsx":"23","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\SearchBar.tsx":"24","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Paginate.tsx":"25","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\PodcastList.tsx":"26","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\AdminPanel.tsx":"27","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\UserEdit.tsx":"28","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\PodcastEdit.tsx":"29","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\podcast.tsx":"30","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\commentReducers.ts":"31","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\commentActions.ts":"32","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Homepage.tsx":"33","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\functions\\functions.ts":"34","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Confirm.tsx":"35","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Reply.tsx":"36","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Comment.tsx":"37","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\functions\\commentFunctions.ts":"38","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Search.tsx":"39","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\WeatherChart.tsx":"40"},{"size":654,"mtime":1615886009450,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1867,"mtime":1614638576283,"results":"44","hashOfConfig":"42"},{"size":1534,"mtime":1615757569784,"results":"45","hashOfConfig":"42"},{"size":3176,"mtime":1614195213514,"results":"46","hashOfConfig":"42"},{"size":3217,"mtime":1619602510285,"results":"47","hashOfConfig":"42"},{"size":6649,"mtime":1617662428853,"results":"48","hashOfConfig":"42"},{"size":477,"mtime":1615411451967,"results":"49","hashOfConfig":"42"},{"size":320,"mtime":1614956898355,"results":"50","hashOfConfig":"42"},{"size":3290,"mtime":1617828431474,"results":"51","hashOfConfig":"42"},{"size":6004,"mtime":1617639061316,"results":"52","hashOfConfig":"42"},{"size":3462,"mtime":1615887185664,"results":"53","hashOfConfig":"42"},{"size":7514,"mtime":1616273972014,"results":"54","hashOfConfig":"42"},{"size":2755,"mtime":1616170684544,"results":"55","hashOfConfig":"42"},{"size":6083,"mtime":1614195117009,"results":"56","hashOfConfig":"42"},{"size":3030,"mtime":1617816563287,"results":"57","hashOfConfig":"42"},{"size":2537,"mtime":1617639064958,"results":"58","hashOfConfig":"42"},{"size":6761,"mtime":1619703955014,"results":"59","hashOfConfig":"42"},{"size":2987,"mtime":1617042098681,"results":"60","hashOfConfig":"42"},{"size":396,"mtime":1619723720723,"results":"61","hashOfConfig":"42"},{"size":214,"mtime":1613172291458,"results":"62","hashOfConfig":"42"},{"size":5541,"mtime":1619704529582,"results":"63","hashOfConfig":"42"},{"size":8013,"mtime":1619537686448,"results":"64","hashOfConfig":"42"},{"size":3413,"mtime":1617628870196,"results":"65","hashOfConfig":"42"},{"size":792,"mtime":1616422895857,"results":"66","hashOfConfig":"42"},{"size":5303,"mtime":1617786646843,"results":"67","hashOfConfig":"42"},{"size":6716,"mtime":1617647172899,"results":"68","hashOfConfig":"42"},{"size":2922,"mtime":1615043776872,"results":"69","hashOfConfig":"42"},{"size":5396,"mtime":1617476362996,"results":"70","hashOfConfig":"42"},{"size":395,"mtime":1619704317485,"results":"71","hashOfConfig":"42"},{"size":1694,"mtime":1616536677473,"results":"72","hashOfConfig":"42"},{"size":2454,"mtime":1619704327207,"results":"73","hashOfConfig":"42"},{"size":3802,"mtime":1617662387632,"results":"74","hashOfConfig":"42"},{"size":429,"mtime":1617033315555,"results":"75","hashOfConfig":"42"},{"size":956,"mtime":1615807446748,"results":"76","hashOfConfig":"42"},{"size":5510,"mtime":1615984089962,"results":"77","hashOfConfig":"42"},{"size":8699,"mtime":1619601079166,"results":"78","hashOfConfig":"42"},{"size":414,"mtime":1616536310284,"results":"79","hashOfConfig":"42"},{"size":2054,"mtime":1617662846361,"results":"80","hashOfConfig":"42"},{"size":3951,"mtime":1619536526513,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"13jg2n6",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\index.tsx",[],["181","182"],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reportWebVitals.js",[],["183","184"],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\store.js",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\App.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\userReducers.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\podcastReducers.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\navbar.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\footer.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\homepage.tsx",[],["185","186"],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\contact.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\weather.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Register.tsx",["187"],"import React, { useState, useEffect } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { register } from '../actions/userActions';\r\n\r\nimport '../styles/login-register.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Register: React.FC<{ location: any; history: any }> = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  const userRegister = useSelector(\r\n    (state: RootStateOrAny) => state.userRegister\r\n  );\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    onLoadAnimations();\r\n\r\n    return () => {\r\n      onLeaveAnimations();\r\n    };\r\n  }, [loading, userInfo, redirect]);\r\n\r\n  const onLoadAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'black';\r\n\r\n    const form = document.querySelector('.login-register-form') as HTMLElement;\r\n    setTimeout(() => {\r\n      form.style.opacity = '1';\r\n    }, 15);\r\n  };\r\n\r\n  const onLeaveAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'transparent';\r\n  };\r\n\r\n  const handleRegister = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      console.log('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='login-register-container'>\r\n        <form className='login-register-form' onSubmit={handleRegister}>\r\n          <h2 className='heading'>Zarejestruj się</h2>\r\n          <p className='sign-in-info'>\r\n            Tworząc konto uzyskasz możliwość dodawania komentarzy.\r\n          </p>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder='Nazwa użytkownika'\r\n            required\r\n          />\r\n          <input\r\n            type='email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder='Email'\r\n            required\r\n          />\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder='Hasło'\r\n            required\r\n          />\r\n          <input\r\n            type='password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            placeholder='Powtórz hasło'\r\n            required\r\n          />\r\n          <button type='submit'>Utwórz konto</button>\r\n          {error && <Message>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <p className='sign-in-info'>\r\n            Masz już konto?{' '}\r\n            <Link to='/login' className='link-button'>\r\n              <strong>Zaloguj się</strong>\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\UserPanel.tsx",["188","189","190","191"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/user-panel.scss';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { getPodcasts } from '../actions/podcastActions';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport axios from 'axios';\r\n\r\nconst UserPanel: React.FC<{ history: any }> = ({ history }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [profilePic, setProfilePic] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state: RootStateOrAny) => state.userDetails);\r\n  const { error, loading: loadingUser, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector(\r\n    (state: RootStateOrAny) => state.userUpdateProfile\r\n  );\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userLogin = useSelector((state: RootStateOrAny) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const podcastList = useSelector((state: RootStateOrAny) => state.podcastList);\r\n  const { podcasts, loading: loadingPodcasts } = podcastList;\r\n\r\n  useEffect(() => {\r\n    (document.querySelector('.navbar') as HTMLElement).classList.add('static');\r\n\r\n    if (!userInfo || !userInfo.id) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name || success || userInfo.id !== user.id) {\r\n        dispatch({ type: 'USER_UPDATE_PROFILE_RESET' });\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setUsername(user.username);\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setProfilePic(user.userProfile.profile_pic);\r\n        setLoading(false);\r\n        fadeInAnimations();\r\n      }\r\n    }\r\n    dispatch(getPodcasts());\r\n    return () => {\r\n      (document.querySelector('.navbar') as HTMLElement).classList.remove(\r\n        'static'\r\n      );\r\n    };\r\n  }, [dispatch, history, success, userInfo, user]);\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          username: username,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const fadeInAnimations = () => {\r\n    const panel = document.querySelector('.user-panel') as HTMLElement;\r\n\r\n    setTimeout(() => {\r\n      panel.classList.remove('hidden');\r\n    }, 15);\r\n  };\r\n\r\n  const uploadFileHandler = () => async (e: React.FormEvent | any) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', file);\r\n    formData.append('profile_id', user.userProfile.id);\r\n\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/profile/upload/',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      await dispatch(getUserDetails('profile'));\r\n      setProfilePic(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='user-panel hidden'>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className='liked-podcasts'>\r\n            <h3 className='heading'>Polubienia:</h3>\r\n            {loadingPodcasts ? (\r\n              <Loader />\r\n            ) : (\r\n              podcasts\r\n                .filter((podcast: any) =>\r\n                  podcast.likes.find((like: any) => like.user === userInfo.id)\r\n                )\r\n                .sort((a: any, b: any) => {\r\n                  const idxA = a.likes.findIndex(\r\n                    (like: any) => like.user === userInfo.id\r\n                  );\r\n                  const idxB = b.likes.findIndex(\r\n                    (like: any) => like.user === userInfo.id\r\n                  );\r\n\r\n                  return (\r\n                    Date.parse(b.likes[idxB].created) -\r\n                    Date.parse(a.likes[idxA].created)\r\n                  );\r\n                })\r\n                .map((podcast: any, idx: number) => (\r\n                  <Link\r\n                    className='liked-podcast-link'\r\n                    key={podcast.title}\r\n                    to={`podcast/${podcast.id}`}>\r\n                    <span>{idx + 1}</span>\r\n                    <img src={podcast.cover} alt='cover' />\r\n                    <h3>{podcast.title}</h3>\r\n                  </Link>\r\n                ))\r\n            )}\r\n          </div>\r\n          <div className='user-data'>\r\n            <div className='photo-settings'>\r\n              <div className='picture-box'>\r\n                {user && (\r\n                  <img\r\n                    className='profile-pic'\r\n                    src={user.userProfile && user.userProfile.profile_pic}\r\n                    alt=''\r\n                  />\r\n                )}\r\n                {uploading && (\r\n                  <div className='loader-box'>\r\n                    <Loader />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className='basic-data'>\r\n                <h1 className='username'>{user && user.username}</h1>\r\n                <div className='picture-form'>\r\n                  <button>Zmień zdjęcie</button>\r\n                  <input\r\n                    type='file'\r\n                    placeholder='Description'\r\n                    onChange={uploadFileHandler()}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <form className='data-form' onSubmit={submitHandler}>\r\n              <h3 className='heading'>Edytuj informacje</h3>\r\n              <label>Nazwa użytkownika</label>\r\n              <input\r\n                type='text'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n              <label>Imię</label>\r\n              <input\r\n                type='text'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <label>Email</label>\r\n              <input\r\n                type='text'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <h3 className='heading'>Zmień hasło</h3>\r\n              <label>Hasło</label>\r\n              <input\r\n                type='password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <label>Potwierdź hasło</label>\r\n              <input\r\n                type='password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n              <button type='submit'>Aktualizuj</button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Login.tsx",["192","193"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport '../styles/login-register.scss';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst Login: React.FC<{ location: any; history: any }> = ({\r\n  location,\r\n  history,\r\n}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  const { error, loading, userInfo } = useSelector(\r\n    (state: RootStateOrAny) => state.userLogin\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    // (document.querySelector(\r\n    //   '.login-register-container'\r\n    // ) as HTMLElement).style.height = `${window.innerHeight}px`;\r\n    onLoadAnimations();\r\n\r\n    return () => {\r\n      onLeaveAnimations();\r\n    };\r\n  }, [userInfo, redirect, location]);\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(login(username, password));\r\n  };\r\n\r\n  const onLoadAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'black';\r\n\r\n    const form = document.querySelector('.login-register-form') as HTMLElement;\r\n    setTimeout(() => {\r\n      form.style.opacity = '1';\r\n    }, 100);\r\n  };\r\n\r\n  const onLeaveAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'transparent';\r\n  };\r\n\r\n  return (\r\n    <div className='login-register-container'>\r\n      <form className='login-register-form' onSubmit={handleLogin}>\r\n        <h2 className='heading'>Zaloguj się</h2>\r\n        <p className='sign-in-info'>Wypełnij formularz, aby się zalogować</p>\r\n        <input\r\n          type='text'\r\n          placeholder='Nazwa użytkownika'\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Hasło'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type='submit'>Zaloguj się</button>\r\n        {error && <Message>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <p className='sign-in-info'>\r\n          Nie masz konta?{' '}\r\n          <Link to='/register' className='link-button'>\r\n            <strong>Zarejestruj się</strong>\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\userActions.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\message-form.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\current-weather.tsx",["194"],"import React from 'react';\r\nimport '../styles/current-weather.scss';\r\n\r\nimport { translateDescription } from '../functions/functions';\r\n\r\nconst displayDate = () => {\r\n  const date = new Date();\r\n  let dayOfWeek = date.getDay();\r\n  let dayOfMonth = date.getDate();\r\n  let month = date.getMonth();\r\n\r\n  const days = [\r\n    'Niedziela',\r\n    'Poniedziałek',\r\n    'Wtorek',\r\n    'Środa',\r\n    'Czwartek',\r\n    'Piątek',\r\n    'Sobota',\r\n  ];\r\n\r\n  const months = [\r\n    'Stycznia',\r\n    'Lutego',\r\n    'Marca',\r\n    'Kwietnia',\r\n    'Maja',\r\n    'Czerwca',\r\n    'Lipca',\r\n    'Sierpnia',\r\n    'Września',\r\n    'Października',\r\n    'Listopada',\r\n    'Grudnia',\r\n  ];\r\n\r\n  let currentDate = {\r\n    dayOfWeek: days[dayOfWeek],\r\n    dayOfMonth: dayOfMonth,\r\n    month: months[month],\r\n  };\r\n\r\n  return currentDate;\r\n};\r\n\r\nconst CurrentWeather: React.FC<{\r\n  weatherData: any;\r\n}> = ({ weatherData }) => {\r\n  const date = displayDate();\r\n  return (\r\n    <div className='current-weather'>\r\n      <div className='temp'>\r\n        <img\r\n          className='weather-image'\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.description}.svg`)\r\n              .default\r\n          }\r\n          alt='weather'\r\n        />\r\n        <h1 className='temperature'>\r\n          {Math.round(weatherData.currentTemp)}&#176;\r\n        </h1>\r\n      </div>\r\n      <div className='weather-info'>\r\n        <div className='location'>\r\n          <span className='date'>\r\n            {translateDescription(weatherData.description)}\r\n          </span>\r\n          {/* <span className='date'>\r\n            {date.dayOfWeek}, {date.dayOfMonth} {date.month}\r\n          </span> */}\r\n          <h3 className='city-name'>\r\n            <i className='fas fa-map-marker-alt'></i>\r\n            {weatherData.city}\r\n            {weatherData.country !== '' ? ', ' + weatherData.country : ''}\r\n          </h3>\r\n        </div>\r\n        {/* <div className='description'>\r\n          <img\r\n            className='weather-image'\r\n            src={\r\n              require(`../assets/weather-images/${weatherData.description}.svg`)\r\n                .default\r\n            }\r\n            alt='weather'\r\n          />\r\n          <span>{translateDescription(weatherData.description)}</span>\r\n        </div> */}\r\n      </div>\r\n      {/* <div className='description'>\r\n        <span>Wilgotność: {weatherData.humidity}% </span>\r\n        <span>Wiatr: {Math.round(weatherData.windSpeed)} km/h</span>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Comments.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\forecast.tsx",["195"],"import React from 'react';\r\nimport '../styles/forecast.scss';\r\n\r\nimport { translateDescription as translate } from '../functions/functions';\r\n\r\nconst displayDate = () => {\r\n  const date = new Date();\r\n  const day = date.getDay();\r\n\r\n  let days = ['Niedz', 'Pon', 'Wt', 'Śr', 'Czw', 'Pt', 'Sob'];\r\n\r\n  if (window.innerWidth > 1024) {\r\n    days = [\r\n      'Niedziela',\r\n      'Poniedziałek',\r\n      'Wtorek',\r\n      'Środa',\r\n      'Czwartek',\r\n      'Piątek',\r\n      'Sobota',\r\n    ];\r\n  }\r\n\r\n  const daysOfWeek = [];\r\n\r\n  let idx = day + 1;\r\n  for (let i = 0; i < 5; i++) {\r\n    if (idx === 7) {\r\n      idx = 0;\r\n      daysOfWeek.push(days[idx]);\r\n    } else {\r\n      daysOfWeek.push(days[idx]);\r\n    }\r\n    idx++;\r\n  }\r\n  return daysOfWeek;\r\n};\r\n\r\nconst Forecast: React.FC<{\r\n  weatherData: any;\r\n}> = ({ weatherData }) => {\r\n  const daysOfWeek = displayDate();\r\n  return (\r\n    <div className='forecast'>\r\n      <div className='day-forecast'>\r\n        <h3>{weatherData.tempIn1D}&#176;</h3>\r\n        <img\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.descIn1D}.svg`)\r\n              .default\r\n          }\r\n          alt='1dimg'\r\n        />\r\n        <h3 className='day-of-week'>{daysOfWeek[0]}</h3>\r\n        <h3 className='wind-speed'>{weatherData.windIn1D}km/h</h3>\r\n      </div>\r\n      <div className='day-forecast'>\r\n        <h3>{weatherData.tempIn2D}&#176;</h3>\r\n        <img\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.descIn2D}.svg`)\r\n              .default\r\n          }\r\n          alt='2dimg'\r\n        />\r\n        <h3 className='day-of-week'>{daysOfWeek[1]}</h3>\r\n        <h3 className='wind-speed'>{weatherData.windIn2D}km/h</h3>\r\n      </div>\r\n      <div className='day-forecast'>\r\n        <h3>{weatherData.tempIn3D}&#176;</h3>\r\n        <img\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.descIn3D}.svg`)\r\n              .default\r\n          }\r\n          alt='3dimg'\r\n        />\r\n        <h3 className='day-of-week'>{daysOfWeek[2]}</h3>\r\n        <h3 className='wind-speed'>{weatherData.windIn3D}km/h</h3>\r\n      </div>\r\n      <div className='day-forecast'>\r\n        <h3>{weatherData.tempIn4D}&#176;</h3>\r\n        <img\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.descIn4D}.svg`)\r\n              .default\r\n          }\r\n          alt='4dimg'\r\n        />\r\n        <h3 className='day-of-week'>{daysOfWeek[3]}</h3>\r\n        <h3 className='wind-speed'>{weatherData.windIn4D}km/h</h3>\r\n      </div>\r\n      <div className='day-forecast'>\r\n        <h3>{weatherData.tempIn5D}&#176;</h3>\r\n        <img\r\n          src={\r\n            require(`../assets/weather-images/${weatherData.descIn5D}.svg`)\r\n              .default\r\n          }\r\n          alt='5dimg'\r\n        />\r\n        <h3 className='day-of-week'>{daysOfWeek[4]}</h3>\r\n        <h3 className='wind-speed'>{weatherData.windIn5D}km/h</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Loader.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Message.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\podcastActions.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\player.tsx",["196","197","198"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/player.scss';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { getPodcastDetails } from '../actions/podcastActions';\r\nimport Loader from '../components/Loader';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Player: React.FC<{ podcastId: number }> = ({ podcastId }) => {\r\n  const [likesCount, setLikesCount] = useState(0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [likes, setLikes] = useState([] as any);\r\n  const [podcastPreview, setPodcastPreview] = useState({}) as any;\r\n  const [playerLoading, setPlayerLoading] = useState(true);\r\n  const [mobileLayout, setMobileLayout] = useState(window.innerWidth < 420);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { podcast, loading } = useSelector(\r\n    (state: RootStateOrAny) => state.podcastDetails\r\n  );\r\n\r\n  const { userInfo } = useSelector((state: RootStateOrAny) => state.userLogin);\r\n\r\n  const getPodcastPreview = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/api/podcast/${podcastId}/preview/`);\r\n\r\n      setPodcastPreview(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const checkIfMobile = () => {\r\n    const player = document.querySelector('.player') as HTMLElement;\r\n    if (player && window.innerWidth < 420) {\r\n      setMobileLayout(true);\r\n      player.style.background = `rgb${podcast.dominant_color}`;\r\n    } else {\r\n      setMobileLayout(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    window.addEventListener('resize', checkIfMobile);\r\n\r\n    if (!podcast.title || podcast.id !== Number(podcastId)) {\r\n      dispatch(getPodcastDetails(podcastId));\r\n      getPodcastPreview();\r\n    } else {\r\n      fadeInPlayer();\r\n      setLikesCount(podcast.likes.length);\r\n      setLikes(podcast.likes);\r\n      if (window.innerWidth < 420) {\r\n        (document.querySelector(\r\n          '.player'\r\n        ) as HTMLElement).style.background = `rgb${podcast.dominant_color}`;\r\n      }\r\n      if (\r\n        userInfo &&\r\n        podcast.likes.find((like: any) => like.user === userInfo.id)\r\n      ) {\r\n        setIsLiked(true);\r\n      }\r\n    }\r\n  }, [dispatch, podcast, userInfo, podcastId, podcastPreview]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: 'PODCAST_DETAILS_RESET' });\r\n    };\r\n  }, []);\r\n\r\n  const fadeInPlayer = () => {\r\n    const player = document.querySelector('.player') as HTMLElement;\r\n\r\n    setTimeout(() => {\r\n      player.classList.remove('fade-in-animation');\r\n    }, 25);\r\n  };\r\n\r\n  const loadImage = (image: any) => {\r\n    setTimeout(() => {\r\n      image.style.opacity = '1';\r\n    }, 100);\r\n  };\r\n\r\n  const likeUnlike = async () => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n      return;\r\n    }\r\n\r\n    const likeButton = document.querySelector('.like-button') as HTMLElement;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n        data: {\r\n          type: 'podcast',\r\n        },\r\n      };\r\n\r\n      likeButton.classList.toggle('liked');\r\n      setIsLiked(!isLiked);\r\n\r\n      if (isLiked) {\r\n        setLikesCount(likesCount - 1);\r\n        await axios.delete(`/api/podcast/${podcastId}/unlike/`, config);\r\n        likes.splice(likes.indexOf(userInfo.id), 1);\r\n      } else {\r\n        setLikesCount(likesCount + 1);\r\n        await axios.post(\r\n          `/api/podcast/${podcastId}/like/`,\r\n          { type: 'podcast' },\r\n          config\r\n        );\r\n        likes.push(userInfo.id);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const goToComments = () => {\r\n    const comments = document.querySelector('.comments') as HTMLElement;\r\n    window.scrollTo({ top: comments.offsetTop, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleGoNext = () => {\r\n    history.push(`/podcast/${podcastPreview.id}`);\r\n    history.go(0);\r\n  };\r\n\r\n  const setPreviewBackground = () => {\r\n    const preview = document.querySelector(\r\n      '.next-podcast-preview'\r\n    ) as HTMLElement;\r\n\r\n    if (preview) {\r\n      preview.style.backgroundColor = `rgba${podcastPreview.dominant_color.slice(\r\n        0,\r\n        -1\r\n      )}, .75)`;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      preview.classList.remove('hidden');\r\n    }, 1500);\r\n  };\r\n\r\n  const handleSpotifyLoad = (player: any) => {\r\n    setPlayerLoading(false);\r\n    player.style.opacity = '1';\r\n  };\r\n\r\n  return (\r\n    <div className='player fade-in-animation'>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className='content'>\r\n            {podcast.background && !mobileLayout ? (\r\n              <img\r\n                src={podcast.background}\r\n                alt='cover'\r\n                className='background'\r\n                onLoad={(e) => loadImage(e.target)}\r\n              />\r\n            ) : (\r\n              <div className='podcast-cover'>\r\n                <img\r\n                  src={podcast.cover}\r\n                  alt='cover'\r\n                  className='cover'\r\n                  onLoad={(e) => loadImage(e.target)}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className='gradient'></div>\r\n            <div className='wrapper'>\r\n              <div className='flex-container'>\r\n                <div className='podcast-data'>\r\n                  <h1 className='title'>{podcast.title}</h1>\r\n                  <div className='activities'>\r\n                    <span className='activity'>\r\n                      <i\r\n                        className={`far fa-heart like-button ${\r\n                          isLiked ? 'liked' : ''\r\n                        }`}\r\n                        onClick={likeUnlike}></i>\r\n                      <span className='like-balance'>{likesCount}</span>\r\n                    </span>\r\n                    <span className='activity'>\r\n                      <i\r\n                        className='far fa-comment comment-button'\r\n                        onClick={goToComments}></i>\r\n                      {podcast.commentsCount}\r\n                    </span>\r\n                  </div>\r\n                  <p className='description'>{podcast.description}</p>\r\n                  <div className='spotify-wrapper'>\r\n                    <iframe\r\n                      title={podcast.title}\r\n                      className='audio-player'\r\n                      src={`https://open.spotify.com/embed-podcast/episode/${podcast.code}`}\r\n                      width='100%'\r\n                      frameBorder='0'\r\n                      allow='encrypted-media'\r\n                      onLoad={(e) => handleSpotifyLoad(e.target)}></iframe>\r\n                    {playerLoading && <Loader />}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {podcastPreview.title && (\r\n            <div\r\n              className='next-podcast-preview hidden'\r\n              onLoad={setPreviewBackground}>\r\n              <div\r\n                className='hide-btn'\r\n                onClick={() =>\r\n                  (document.querySelector(\r\n                    '.next-podcast-preview'\r\n                  ) as HTMLElement).classList.add('hidden')\r\n                }>\r\n                <i className='fas fa-times'></i>\r\n              </div>\r\n              <div className='wrapper'>\r\n                <span className='heading-preview'>Posłuchaj także:</span>\r\n                <span onClick={handleGoNext}>\r\n                  <h3 className='preview-title'>{podcastPreview.title}</h3>\r\n                </span>\r\n              </div>\r\n              <img\r\n                src={podcastPreview.cover}\r\n                alt='preview-cover'\r\n                onLoad={(e) => loadImage(e.target)}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\SearchBar.tsx",["199"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../styles/search-bar.scss';\r\nimport { getPodcasts } from '../actions/podcastActions';\r\nimport axios from 'axios';\r\nimport Loader from './Loader';\r\n\r\nconst SearchBar: React.FC<{ setInputValue: any; inputValue: string }> = ({\r\n  setInputValue,\r\n  inputValue,\r\n}) => {\r\n  const [podcasts, setPodcasts] = useState([] as any);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  let defKeyword = history.location.search;\r\n\r\n  if (defKeyword) {\r\n    defKeyword = defKeyword.split('?search=')[1].split('&')[0];\r\n  } else {\r\n    defKeyword = '';\r\n  }\r\n\r\n  const [keyword, setKeyword] = useState(defKeyword.replace(/%20/g, ' '));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/podcast/?search=${keyword}&page=1`);\r\n      dispatch(getPodcasts);\r\n    } else {\r\n      history.push(history.location.pathname);\r\n    }\r\n  };\r\n\r\n  const changeHandler = async (word: string) => {\r\n    if (word !== '') {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const { data } = await axios.get(`/api/podcast/?search=${word}&page=1`);\r\n        setPodcasts(data.results);\r\n        await setTimeout(() => {\r\n          setLoading(false);\r\n        }, 750);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setPodcasts([]);\r\n    }\r\n  };\r\n\r\n  const clearForm = () => {\r\n    focusOnForm();\r\n    setKeyword('');\r\n    setInputValue('');\r\n    (document.getElementById('search-input') as HTMLInputElement).value = '';\r\n  };\r\n\r\n  const focusOnForm = () => {\r\n    document.getElementById('search-input')?.focus();\r\n  };\r\n\r\n  const searchInput = document.getElementById(\r\n    'search-input'\r\n  ) as HTMLInputElement;\r\n\r\n  return (\r\n    <div className='search-bar'>\r\n      <form onSubmit={submitHandler} onClick={focusOnForm}>\r\n        <i className='fas fa-search'></i>\r\n        <input\r\n          id='search-input'\r\n          type='text'\r\n          placeholder='Szukaj podcastów'\r\n          autoComplete='off'\r\n          onChange={(e) => {\r\n            setKeyword(e.target.value);\r\n            setInputValue(e.target.value);\r\n            changeHandler(e.target.value);\r\n          }}\r\n        />\r\n        <i\r\n          className={`fas fa-times clear ${\r\n            searchInput && searchInput.value !== '' ? '' : 'hidden'\r\n          }`}\r\n          onClick={clearForm}></i>\r\n        <div className={`list ${inputValue === '' ? 'hidden' : ''}`}>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            podcasts &&\r\n            podcasts.slice(0, 5).map((podcast: any, idx: number) => (\r\n              <Link\r\n                className='search-podcast-link'\r\n                key={idx}\r\n                to={`/podcast/${podcast.id}`}>\r\n                <div className='cover'>\r\n                  <img src={podcast.cover} alt='cover' />\r\n                </div>\r\n                <div className='data'>\r\n                  <h3 className='podcast-title'>{podcast.title}</h3>\r\n                  <h6 className='category'>{podcast.category}</h6>\r\n                </div>\r\n              </Link>\r\n            ))\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n",["200","201"],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Paginate.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\PodcastList.tsx",["202","203"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/podcast-list.scss';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport pl from 'javascript-time-ago/locale/pl';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { getPodcasts } from '../actions/podcastActions';\r\nimport Loader from '../components/Loader';\r\nimport Search from '../components/Search';\r\n\r\nconst PodcastList: React.FC<{ history: any }> = ({ history }) => {\r\n  TimeAgo.addLocale(pl);\r\n  const timeAgo = new TimeAgo('pl-PL');\r\n  timeAgo.format(new Date());\r\n\r\n  const playPodcast = (idx: number) => {\r\n    history.push(`/podcast/${podcasts[idx].id}`);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { podcasts, loading } = useSelector(\r\n    (state: RootStateOrAny) => state.podcastList\r\n  );\r\n\r\n  let keyword = history.location.search;\r\n  let keywordValue = keyword;\r\n  if (keyword) {\r\n    keywordValue = keywordValue.split('=')[1].split('&')[0];\r\n    keywordValue = keywordValue.replace(/%20/g, ' ');\r\n  }\r\n\r\n  useEffect(() => {\r\n    (document.querySelector('.navbar') as HTMLElement).classList.add('static');\r\n    if (podcasts.length === 0) {\r\n      dispatch(getPodcasts(keyword));\r\n    }\r\n\r\n    return () =>\r\n      (document.querySelector('.navbar') as HTMLElement).classList.remove(\r\n        'static'\r\n      );\r\n  }, [dispatch, keyword]);\r\n\r\n  const fadeInList = () => {\r\n    const container = document.querySelector('.podcast-list') as HTMLElement;\r\n\r\n    setTimeout(() => {\r\n      container.classList.remove('fade-in-animation');\r\n    }, 15);\r\n  };\r\n\r\n  const loadImage = (image: any) => {\r\n    setTimeout(() => {\r\n      (image as HTMLElement).style.opacity = '1';\r\n    }, 25);\r\n  };\r\n\r\n  return (\r\n    <div className='podcast-list fade-in-animation'>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Search />\r\n          <div className='main' onLoad={fadeInList}>\r\n            {podcasts[0] && !keyword ? (\r\n              <div className='newest-podcast'>\r\n                <div className='main-cover'>\r\n                  <img\r\n                    className='main-cover'\r\n                    src={podcasts[0].cover}\r\n                    alt='cover'\r\n                    onLoad={(e) => loadImage(e.target)}\r\n                  />\r\n                </div>\r\n                <div className='newest-podcast-data'>\r\n                  <h1>{podcasts[0].title}</h1>\r\n                  <p className='description'>{podcasts[0].description}</p>\r\n                  <Link\r\n                    className='basic-button'\r\n                    to={`/podcast/${podcasts[0].id}`}>\r\n                    Słuchaj\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <div className='newest-list'>\r\n              {keyword ? (\r\n                <h3 className='heading'>{keywordValue}</h3>\r\n              ) : (\r\n                <h3 className='heading'>Najnowsze podcasty</h3>\r\n              )}\r\n\r\n              <div className='content'>\r\n                {podcasts &&\r\n                  podcasts.map(\r\n                    (podcast: any, idx: number) =>\r\n                      (!keyword ? podcasts[0] !== podcast : podcasts) && (\r\n                        <div\r\n                          className='podcast-button'\r\n                          onClick={() => playPodcast(idx)}\r\n                          key={idx}>\r\n                          <div className='podcast-cover'>\r\n                            {podcast.cover ? (\r\n                              <img\r\n                                className='cover'\r\n                                src={podcast.cover}\r\n                                alt='cover'\r\n                                onLoad={(e) => loadImage(e.target)}\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                            <span className='likes-comments-count'>\r\n                              <i className='far fa-heart like-button'></i>{' '}\r\n                              {podcast.likes.length}\r\n                            </span>\r\n                            <span className='likes-comments-count'>\r\n                              <i className='far fa-comment comment-button'></i>{' '}\r\n                              {podcast.commentsCount}\r\n                            </span>\r\n                          </div>\r\n                          <h1 className='podcast-title'>{podcast.title}</h1>\r\n                          <div className='additional-info'>\r\n                            {podcast.category}\r\n                          </div>\r\n                          <div className='additional-info'>\r\n                            {timeAgo.format(Date.parse(podcast.date_added))}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                  )}\r\n              </div>\r\n              {/* <Paginate page={page} pages={pages} keyword={keyword} /> */}\r\n            </div>\r\n            {/* <div className='best-list'>\r\n              <h3 className='heading'>Najlepiej oceniane</h3>\r\n            </div> */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PodcastList;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\AdminPanel.tsx",["204","205"],"import { useEffect } from 'react';\r\nimport '../styles/admin-panel.scss';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { listUsers } from '../actions/userActions';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  createPodcast,\r\n  deletePodcast,\r\n  getPodcasts,\r\n} from '../actions/podcastActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nconst AdminPanel: React.FC<{ history: any }> = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state: RootStateOrAny) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { podcasts, loading: podcastsLoading } = useSelector(\r\n    (state: RootStateOrAny) => state.podcastList\r\n  );\r\n\r\n  const { loading: usersLoading, users } = useSelector(\r\n    (state: RootStateOrAny) => state.userList\r\n  );\r\n\r\n  const { success: successUserDelete } = useSelector(\r\n    (state: RootStateOrAny) => state.userDelete\r\n  );\r\n\r\n  const { success: successPodcastDelete } = useSelector(\r\n    (state: RootStateOrAny) => state.podcastDelete\r\n  );\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    podcast: createdPodcast,\r\n  } = useSelector((state: RootStateOrAny) => state.podcastCreate);\r\n\r\n  let keyword = history.location.search;\r\n  useEffect(() => {\r\n    dispatch({ type: 'PODCAST_CREATE_RESET' });\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/podcastlist/${createdPodcast.id}/edit`);\r\n    } else {\r\n      dispatch(getPodcasts(keyword));\r\n    }\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(listUsers());\r\n      dispatch(getPodcasts());\r\n    }\r\n\r\n    onLoadAnimations();\r\n    return () => {\r\n      onLeaveAnimations();\r\n    };\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    keyword,\r\n    userInfo,\r\n    successPodcastDelete,\r\n    successUserDelete,\r\n    successCreate,\r\n    createdPodcast,\r\n  ]);\r\n\r\n  const onLoadAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'black';\r\n  };\r\n\r\n  const onLeaveAnimations = () => {\r\n    const navbar = document.querySelector('.navbar') as HTMLElement;\r\n    navbar.style.background = 'transparent';\r\n  };\r\n\r\n  const podcastDeleteHandler = (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete this podcast?')) {\r\n      dispatch(deletePodcast(id));\r\n    }\r\n  };\r\n\r\n  const userDeleteHandler = (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  const createPodcastHandler = () => {\r\n    dispatch(createPodcast());\r\n  };\r\n\r\n  const showPanel = () => {\r\n    const panel = document.querySelector('.admin-panel') as HTMLElement;\r\n\r\n    panel &&\r\n      setTimeout(() => {\r\n        panel.classList.remove('admin-panel-hidden');\r\n      }, 15);\r\n  };\r\n\r\n  return (\r\n    <div className='admin-panel admin-panel-hidden'>\r\n      {podcastsLoading || usersLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className='content'>\r\n          {showPanel()}\r\n          <h1>Panel Administratora</h1>\r\n          <div className='admin_users-list list-container'>\r\n            <div className='topbar'>\r\n              <h3>Użytkownicy</h3>\r\n            </div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>USERNAME</th>\r\n                  <th>EMAIL</th>\r\n                  <th>ADMIN</th>\r\n                  <th>EDYCJA</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users &&\r\n                  users.map((user: any) => (\r\n                    <tr key={user.id}>\r\n                      <td>{user.id}</td>\r\n                      <td>{user.username}</td>\r\n                      <td>{user.email}</td>\r\n                      <td>\r\n                        {user.isAdmin ? (\r\n                          <i\r\n                            className='fas fa-check'\r\n                            style={{ color: 'green' }}></i>\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: 'red' }}></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <Link to={`/admin/userlist/${user.id}/edit`}>\r\n                          <button>\r\n                            <i className='fas fa-edit edit'></i>\r\n                          </button>\r\n                        </Link>\r\n                        <button onClick={() => userDeleteHandler(user.id)}>\r\n                          <i className='fas fa-trash delete'></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className='admin_podcasts-list list-container'>\r\n            <div className='topbar'>\r\n              <h3>Podcasty</h3>\r\n              <button className='adding-button' onClick={createPodcastHandler}>\r\n                Dodaj nowy podcast +\r\n              </button>\r\n            </div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>TYTUŁ</th>\r\n                  <th>KATEGORIA</th>\r\n                  <th>EDYCJA</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {podcasts &&\r\n                  podcasts.map((podcast: any) => (\r\n                    <tr key={podcast.id}>\r\n                      <td>{podcast.id}</td>\r\n                      <td>\r\n                        <Link to={`/podcast/${podcast.id}`}>\r\n                          {podcast.title}\r\n                        </Link>\r\n                      </td>\r\n                      <td>{podcast.category}</td>\r\n                      <td>\r\n                        <Link to={`/admin/podcastlist/${podcast.id}/edit`}>\r\n                          <button>\r\n                            <i className='fas fa-edit edit'></i>\r\n                          </button>\r\n                        </Link>\r\n                        <button\r\n                          onClick={() => {\r\n                            podcastDeleteHandler(podcast.id);\r\n                          }}>\r\n                          <i className='fas fa-trash delete'></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\UserEdit.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\PodcastEdit.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\podcast.tsx",["206"],"import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Comments from '../components/Comments';\r\nimport Player from './player';\r\n\r\nconst Podcast: React.FC<{ match: any }> = ({ match }) => {\r\n  return (\r\n    <div className='podcast'>\r\n      <Player podcastId={match.params.id} />\r\n      <Comments podcastId={match.params.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Podcast;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\reducers\\commentReducers.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\actions\\commentActions.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\pages\\Homepage.tsx",["207","208","209","210","211","212","213","214"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/homepage.scss';\r\n\r\nimport background from '../assets/background-landing.jpg';\r\nimport backgroundWeather from '../assets/background-weather-preview.jpg';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { getPodcastDetails } from '../actions/podcastActions';\r\nimport Loader from '../components/Loader';\r\n\r\nimport { translateDescription } from '../functions/functions';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Landing: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [temp, setTemp] = useState(0);\r\n  const [desc, setDesc] = useState('');\r\n  const [weatherLoading, setWeatherLoading] = useState(false);\r\n  const [podcast, setPodcast] = useState({} as any);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getWeather = async () => {\r\n    const APIKey = 'e7eec20a0655f51584d3e1a50afa74ca';\r\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=Warsaw&appid=${APIKey}&units=metric`;\r\n\r\n    setWeatherLoading(true);\r\n    try {\r\n      const { data } = await axios.get(API);\r\n      setTemp(data.list[0].main.temp);\r\n      setDesc(data.list[0].weather[0].main);\r\n\r\n      setWeatherLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setWeatherLoading(false);\r\n    }\r\n  };\r\n\r\n  const getNewestPodcast = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.get('/api/podcast/newest');\r\n      setPodcast(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!podcast.title) {\r\n      getNewestPodcast();\r\n    } else {\r\n      loadTextContent();\r\n    }\r\n    if (!temp || !desc) {\r\n      getWeather();\r\n    }\r\n  }, [podcast]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 1024) {\r\n      const sections = document.querySelectorAll('.landing .podcast-preview');\r\n      sections.forEach((section) => {\r\n        (section as HTMLElement).style.height = `${window.innerHeight}px`;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const loadImage = (e: any) => {\r\n    setTimeout(() => {\r\n      (e.target as any).style.opacity = '1';\r\n    }, 100);\r\n  };\r\n\r\n  const loadTextContent = () => {\r\n    const texts = document.querySelectorAll('.text-content');\r\n    texts[0] &&\r\n      setTimeout(() => {\r\n        (texts[0] as any).classList.remove('hidden');\r\n      }, 15);\r\n\r\n    window.addEventListener('scroll', () => {\r\n      texts.forEach((text: any) => {\r\n        if (window.scrollY > text.offsetTop + text.offsetHeight) {\r\n          (text as any).classList.remove('hidden');\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='landing'>\r\n      <div className='podcast-preview section-preview'>\r\n        <img\r\n          className='background-image'\r\n          src={background}\r\n          alt='sky'\r\n          onLoad={loadImage}\r\n        />\r\n        {podcast && podcast.title ? (\r\n          <div className='text-content hidden'>\r\n            {/* <h1 className='podcast-title'>{podcast && podcast.title}</h1> */}\r\n            <h1 className='podcast-title'>Podcast popularno naukowy</h1>\r\n            <p className='description'>\r\n              Prowadzącym podcastu jest Łukasz Zduńczyk, dziennikarz Radia\r\n              Kampus. Już teraz słuchaj podcastów o tematyce takiej jak kosmos,\r\n              klimat czy technologia.\r\n            </p>\r\n            <Link to={`/podcast`} className='basic-button' id='podcast-button'>\r\n              Przejdź\r\n            </Link>\r\n          </div>\r\n        ) : loading ? (\r\n          <Loader />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      {/* <div className='section-preview about'></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\functions\\functions.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Confirm.tsx",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Reply.tsx",[],["215","216"],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Comment.tsx",["217","218"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport '../styles/comment.scss';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport Loader from './Loader';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport pl from 'javascript-time-ago/locale/pl';\r\nimport { IComment } from '../functions/interfaces';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getComments } from '../actions/commentActions';\r\nimport axios from 'axios';\r\n\r\ninterface Props {\r\n  comment: IComment;\r\n  commentId?: number;\r\n  userInfo: any;\r\n  commentDeleteHandler: (commentId: number) => void;\r\n  likeUnlike: (comment: any, commentId: number) => void;\r\n  editCommentText: (content: any, commentId: number, replyId?: number) => void;\r\n  showCommentForm: (commentId: number) => void;\r\n  createCommentHandler: (\r\n    e: React.FormEvent,\r\n    type: string,\r\n    commentId: number,\r\n    replyId: number,\r\n    author: string\r\n  ) => void;\r\n  hideForm: (commentId: number) => void;\r\n  isReply?: boolean;\r\n  podcastId: number;\r\n}\r\n\r\nconst Comment: React.FC<Props> = ({\r\n  comment,\r\n  commentId,\r\n  userInfo,\r\n  commentDeleteHandler,\r\n  likeUnlike,\r\n  editCommentText,\r\n  showCommentForm,\r\n  createCommentHandler,\r\n  hideForm,\r\n  isReply,\r\n  podcastId,\r\n}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const commentRef = useRef<HTMLElement>(null);\r\n  const commentTextRef = useRef<HTMLElement>(null);\r\n\r\n  TimeAgo.addLocale(pl);\r\n  const timeAgo = new TimeAgo('pl-PL');\r\n  timeAgo.format(new Date());\r\n\r\n  const buttonsToggle = (commentId: number) => {\r\n    const editButtons = document.querySelector(\r\n      `#comment-${commentId} .comment-user-functions .edit-buttons`\r\n    ) as HTMLElement;\r\n    const onwerButtons = document.querySelector(\r\n      `#comment-${commentId} .comment-user-functions .owner-buttons`\r\n    ) as HTMLElement;\r\n\r\n    editButtons.classList.toggle('buttons-disabled');\r\n    onwerButtons.classList.toggle('buttons-disabled');\r\n    commentRef.current!.classList.toggle('editable');\r\n  };\r\n\r\n  const startStopEditingComment = async (commentId: number) => {\r\n    buttonsToggle(commentId);\r\n\r\n    if (commentRef.current!.contentEditable === 'true') {\r\n      commentRef.current!.contentEditable = 'false';\r\n      await dispatch(getComments(podcastId, false));\r\n    } else {\r\n      commentRef.current!.contentEditable = 'true';\r\n    }\r\n  };\r\n\r\n  const submitEditComment = async (commentId: number) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.put(\r\n        `/api/podcast/comments/${commentId}/update/`,\r\n        { text: commentTextRef.current?.innerText },\r\n        config\r\n      );\r\n\r\n      buttonsToggle(commentId);\r\n      commentRef.current!.contentEditable = 'false';\r\n      await dispatch(getComments(podcastId, false));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={`comment-${comment.id}`}\r\n      className={`comment ${\r\n        userInfo && comment.user === userInfo.id && 'my-comment'\r\n      } ${isReply && 'reply'}`}>\r\n      <div className='comment-data-container'>\r\n        <img\r\n          className='author-profile-photo'\r\n          src={comment.authorProfile.profile_pic}\r\n          alt='profile-pic'\r\n        />\r\n        <div className='wrapper'>\r\n          <div className='comment-info'>\r\n            <div className='basic'>\r\n              <span className='author'>{comment.author}</span>\r\n              <span className='date-added'>\r\n                <i className='far fa-calendar'></i>\r\n                {comment.date_added &&\r\n                  timeAgo.format(Date.parse(comment.date_added))}\r\n              </span>\r\n              {comment.was_edited && (\r\n                <span className='edited'>(edytowany)</span>\r\n              )}\r\n            </div>\r\n            <div className='comment-user-functions'>\r\n              {userInfo && comment.user === userInfo.id ? (\r\n                <>\r\n                  <div className='edit-buttons buttons-disabled'>\r\n                    <i\r\n                      className='fas fa-check-square accept'\r\n                      onClick={() => submitEditComment(comment.id)}></i>\r\n                    <i\r\n                      className='fas fa-minus-square cancel'\r\n                      onClick={() => startStopEditingComment(comment.id)}></i>\r\n                  </div>\r\n                  <div className='owner-buttons'>\r\n                    <i\r\n                      className='fas fa-pen edit'\r\n                      onClick={() => startStopEditingComment(comment.id)}></i>\r\n                    <i\r\n                      className='fas fa-trash delete'\r\n                      onClick={() => commentDeleteHandler(comment.id)}></i>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className='activities'>\r\n                  <i\r\n                    className={`far fa-heart like-button ${\r\n                      userInfo &&\r\n                      comment.likes.find(\r\n                        (like: any) => like.user === userInfo.id\r\n                      ) &&\r\n                      'liked'\r\n                    } `}\r\n                    onClick={(e) => likeUnlike(e.target, comment.id)}></i>\r\n                  <span id={`likes-${comment.id}`} className='like-balance'>\r\n                    {comment.likes.length}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <span\r\n            id={`comment-input-${comment.id}`}\r\n            className='content comment-content-text'\r\n            ref={commentRef}\r\n            onChange={(e) => {\r\n              commentId\r\n                ? editCommentText(e.target, commentId, comment.id)\r\n                : editCommentText(e.target, comment.id);\r\n            }}>\r\n            {comment.higher_author && (\r\n              <span className='higher-author'>@{comment.higher_author}</span>\r\n            )}\r\n            <span className='comment-text' ref={commentTextRef}>\r\n              {comment.text}\r\n            </span>\r\n          </span>\r\n          <p\r\n            className='respond-button'\r\n            onClick={() => showCommentForm(comment.id)}>\r\n            Odpowiedz\r\n          </p>\r\n\r\n          <form\r\n            className='comment-form'\r\n            onSubmit={(e) => {\r\n              commentId\r\n                ? createCommentHandler(\r\n                    e,\r\n                    'comment',\r\n                    commentId,\r\n                    comment.id,\r\n                    comment.author\r\n                  )\r\n                : createCommentHandler(\r\n                    e,\r\n                    'comment',\r\n                    comment.id,\r\n                    0,\r\n                    comment.author\r\n                  );\r\n            }}>\r\n            <div className='form-group'>\r\n              <input\r\n                id={`textBox-${comment.id}`}\r\n                name='comment'\r\n                autoComplete='off'\r\n                placeholder='Napisz komentarz...'\r\n                onClick={() => (!userInfo ? history.push('/login') : '')}\r\n                required\r\n              />\r\n              <div className='line'></div>\r\n            </div>\r\n            <div className={`comment-buttons comment-active`}>\r\n              <button\r\n                className='cancel-button'\r\n                type='reset'\r\n                onClick={() => hideForm(comment.id)}>\r\n                Anuluj\r\n              </button>\r\n              <button\r\n                className='submit-button'\r\n                type='submit'\r\n                onClick={() => hideForm(comment.id)}>\r\n                Skomentuj\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Loader />\r\n\r\n      {/* Odpowiedzi */}\r\n\r\n      {comment.replies &&\r\n        comment.replies\r\n          .sort((a: any, b: any) => {\r\n            return Date.parse(a.date_added) - Date.parse(b.date_added);\r\n          })\r\n          .map((reply: any) => (\r\n            <Comment\r\n              key={reply.id}\r\n              comment={reply}\r\n              commentId={comment.id}\r\n              userInfo={userInfo}\r\n              commentDeleteHandler={commentDeleteHandler}\r\n              likeUnlike={likeUnlike}\r\n              editCommentText={editCommentText}\r\n              showCommentForm={showCommentForm}\r\n              createCommentHandler={createCommentHandler}\r\n              hideForm={hideForm}\r\n              isReply={true}\r\n              podcastId={podcastId}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\functions\\commentFunctions.ts",[],"C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\Search.tsx",["219","220","221"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/search.scss';\r\nimport { useHistory } from 'react-router';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport technology from '../assets/technology.jpg';\r\nimport space from '../assets/space.jpg';\r\nimport climate from '../assets/climate.jpg';\r\nimport podcastBG from '../assets/podcast.jpg';\r\n\r\nconst Search: React.FC<{}> = ({}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const chooseCategory = (e: Event) => {\r\n    const activeButton = e.target as HTMLElement;\r\n\r\n    history.push(`/podcast/?search=${activeButton.innerText}&page=1`);\r\n    history.go(0);\r\n  };\r\n\r\n  const searchInput = document.getElementById(\r\n    'search-input'\r\n  ) as HTMLInputElement;\r\n\r\n  return (\r\n    <div className='search'>\r\n      <h3 className='heading'>Szukaj</h3>\r\n      <SearchBar setInputValue={setInputValue} inputValue={inputValue} />\r\n      <h3 className={`heading ${inputValue === '' ? '' : 'hidden'}`}>\r\n        Kategorie\r\n      </h3>\r\n      <div className={`categories ${inputValue === '' ? '' : 'hidden'}`}>\r\n        <div\r\n          className={`category-button`}\r\n          onClick={() => {\r\n            history.push(`/podcast/`);\r\n            history.go(0);\r\n          }}>\r\n          <span>Wszystkie</span>\r\n          <img src={podcastBG} alt='podcast' />\r\n        </div>\r\n        <div\r\n          className={`category-button`}\r\n          onClick={(e: any) => chooseCategory(e)}>\r\n          <span>Kosmos</span>\r\n          <img src={space} alt='space' />\r\n        </div>\r\n        <div\r\n          className={`category-button`}\r\n          onClick={(e: any) => chooseCategory(e)}>\r\n          <span>Technologia</span>\r\n          <img src={technology} alt='technology' />\r\n        </div>\r\n        <div\r\n          className={`category-button`}\r\n          onClick={(e: any) => chooseCategory(e)}>\r\n          <span>Klimat</span>\r\n          <img src={climate} alt='climate' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","C:\\Users\\dpiet\\Desktop\\Software Development\\REACT DJANGO PROJECTS\\NEW PROJECT\\app\\frontend\\src\\components\\WeatherChart.tsx",["222"],"import React, { useEffect, useState } from 'react';\r\nimport '../styles/weather-chart.scss';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nconst WeatherChart: React.FC<{ weatherData: any }> = ({ weatherData }) => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [hours, setHours] = useState([0, 0, 0, 0, 0, 0, 0]);\r\n\r\n  let data = [] as any;\r\n\r\n  if (window.innerWidth > 420) {\r\n    data = [\r\n      weatherData.tempIn3H,\r\n      weatherData.tempIn6H,\r\n      weatherData.tempIn9H,\r\n      weatherData.tempIn12H,\r\n      weatherData.tempIn15H,\r\n      weatherData.tempIn18H,\r\n      weatherData.tempIn21H,\r\n    ];\r\n  } else {\r\n    data = [\r\n      weatherData.tempIn3H,\r\n      weatherData.tempIn6H,\r\n      weatherData.tempIn9H,\r\n      weatherData.tempIn12H,\r\n      weatherData.tempIn15H,\r\n    ];\r\n  }\r\n\r\n  const countHours = () => {\r\n    let date = new Date();\r\n    const hourBase = date.getHours();\r\n    const hoursArray = [] as any;\r\n\r\n    let number = 7;\r\n    if (window.innerWidth < 420) {\r\n      number = 5;\r\n    }\r\n    for (let i = 1; i <= number; i++) {\r\n      let hour: any = hourBase + i * 3;\r\n      if (hour >= 24) {\r\n        hour -= 24;\r\n      }\r\n      hour += ':00';\r\n      hoursArray.push(hour);\r\n    }\r\n    setHours(hoursArray);\r\n  };\r\n\r\n  const chart = async () => {\r\n    setChartData({\r\n      labels: hours,\r\n      datasets: [\r\n        {\r\n          label: 'Temperatura',\r\n          data: data,\r\n          backgroundColor: ['transparent'],\r\n          borderColor: [\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n          ],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    countHours();\r\n    chart();\r\n  }, [weatherData]);\r\n\r\n  return (\r\n    <div className='weather-chart'>\r\n      <Line\r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: false,\r\n            labels: {\r\n              fontSize: 20,\r\n            },\r\n          },\r\n          tooltips: {\r\n            intersect: false,\r\n            displayColors: false,\r\n            callbacks: {\r\n              label: (tooltipItem) => {\r\n                return `Temperatura: ${\r\n                  tooltipItem.value + String.fromCharCode(176)\r\n                }`;\r\n              },\r\n            },\r\n          },\r\n          layout: {\r\n            padding: {\r\n              top: 40,\r\n              right: 10,\r\n              left: 10,\r\n            },\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  display: false,\r\n                  precision: 1,\r\n                  stepSize: 5,\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  precision: 1,\r\n                  stepSize: 1,\r\n                  fontSize: 14,\r\n                  fontStyle: 'bold',\r\n                  fontColor: 'rgba(255, 255, 255, 0.6)',\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          plugins: {\r\n            datalabels: {\r\n              display: true,\r\n              color: 'white',\r\n              font: {\r\n                size: 14,\r\n                weight: 'bold',\r\n              },\r\n              align: 'top',\r\n              formatter: function (value) {\r\n                return Math.round(value) + String.fromCharCode(176);\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n",{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"223","replacedBy":"227"},{"ruleId":"225","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":36,"column":6,"nodeType":"231","endLine":36,"endColumn":35,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":16,"column":10,"nodeType":"235","messageId":"236","endLine":16,"endColumn":17},{"ruleId":"233","severity":1,"message":"237","line":17,"column":10,"nodeType":"235","messageId":"236","endLine":17,"endColumn":20},{"ruleId":"233","severity":1,"message":"238","line":24,"column":11,"nodeType":"235","messageId":"236","endLine":24,"endColumn":16},{"ruleId":"233","severity":1,"message":"239","line":24,"column":27,"nodeType":"235","messageId":"236","endLine":24,"endColumn":38},{"ruleId":"233","severity":1,"message":"240","line":5,"column":16,"nodeType":"235","messageId":"236","endLine":5,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":38,"column":6,"nodeType":"231","endLine":38,"endColumn":36,"suggestions":"241"},{"ruleId":"233","severity":1,"message":"242","line":49,"column":9,"nodeType":"235","messageId":"236","endLine":49,"endColumn":13},{"ruleId":"233","severity":1,"message":"243","line":4,"column":34,"nodeType":"235","messageId":"236","endLine":4,"endColumn":43},{"ruleId":"233","severity":1,"message":"244","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":14},{"ruleId":"229","severity":1,"message":"245","line":69,"column":6,"nodeType":"231","endLine":69,"endColumn":62,"suggestions":"246"},{"ruleId":"229","severity":1,"message":"247","line":75,"column":6,"nodeType":"231","endLine":75,"endColumn":8,"suggestions":"248"},{"ruleId":"233","severity":1,"message":"249","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"223","replacedBy":"250"},{"ruleId":"225","replacedBy":"251"},{"ruleId":"233","severity":1,"message":"252","line":1,"column":28,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"253","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":25,"suggestions":"254"},{"ruleId":"233","severity":1,"message":"255","line":38,"column":14,"nodeType":"235","messageId":"236","endLine":38,"endColumn":27},{"ruleId":"233","severity":1,"message":"256","line":39,"column":12,"nodeType":"235","messageId":"236","endLine":39,"endColumn":23},{"ruleId":"233","severity":1,"message":"257","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":15},{"ruleId":"233","severity":1,"message":"258","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":25},{"ruleId":"233","severity":1,"message":"259","line":8,"column":10,"nodeType":"235","messageId":"236","endLine":8,"endColumn":24},{"ruleId":"233","severity":1,"message":"260","line":8,"column":39,"nodeType":"235","messageId":"236","endLine":8,"endColumn":50},{"ruleId":"233","severity":1,"message":"261","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":27},{"ruleId":"233","severity":1,"message":"262","line":12,"column":10,"nodeType":"235","messageId":"236","endLine":12,"endColumn":30},{"ruleId":"233","severity":1,"message":"263","line":17,"column":9,"nodeType":"235","messageId":"236","endLine":17,"endColumn":17},{"ruleId":"233","severity":1,"message":"264","line":20,"column":10,"nodeType":"235","messageId":"236","endLine":20,"endColumn":24},{"ruleId":"229","severity":1,"message":"265","line":61,"column":6,"nodeType":"231","endLine":61,"endColumn":15,"suggestions":"266"},{"ruleId":"223","replacedBy":"267"},{"ruleId":"225","replacedBy":"268"},{"ruleId":"233","severity":1,"message":"249","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"252","line":1,"column":36,"nodeType":"235","messageId":"236","endLine":1,"endColumn":44},{"ruleId":"233","severity":1,"message":"249","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":11,"column":31,"nodeType":"271","messageId":"272","endLine":11,"endColumn":33},{"ruleId":"233","severity":1,"message":"273","line":23,"column":9,"nodeType":"235","messageId":"236","endLine":23,"endColumn":20},{"ruleId":"229","severity":1,"message":"274","line":79,"column":6,"nodeType":"231","endLine":79,"endColumn":19,"suggestions":"275"},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],["276"],["277"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["278"],"@typescript-eslint/no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'profilePic' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingUser' is assigned a value but never used.","'useHistory' is defined but never used.",["279"],"'date' is assigned a value but never used.","'translate' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'checkIfMobile' and 'getPodcastPreview'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["281"],"'useEffect' is defined but never used.",["276"],["277"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'podcasts.length'. Either include it or remove the dependency array.",["282"],"'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'Route' is defined but never used.","'backgroundWeather' is defined but never used.","'RootStateOrAny' is defined but never used.","'useSelector' is defined but never used.","'getPodcastDetails' is defined but never used.","'translateDescription' is defined but never used.","'dispatch' is assigned a value but never used.","'weatherLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'desc' and 'temp'. Either include them or remove the dependency array.",["283"],["276"],["277"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'searchInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [loading, userInfo, redirect, history]",{"range":"299","text":"300"},"Update the dependencies array to be: [userInfo, redirect, location, history]",{"range":"301","text":"302"},"Update the dependencies array to be: [dispatch, podcast, userInfo, podcastId, podcastPreview, checkIfMobile, getPodcastPreview]",{"range":"303","text":"304"},"Update the dependencies array to be: [dispatch]",{"range":"305","text":"306"},"Update the dependencies array to be: [dispatch, keyword, podcasts.length]",{"range":"307","text":"308"},"Update the dependencies array to be: [desc, podcast, temp]",{"range":"309","text":"310"},"Update the dependencies array to be: [chart, weatherData]",{"range":"311","text":"312"},[1113,1142],"[loading, userInfo, redirect, history]",[1110,1140],"[userInfo, redirect, location, history]",[2276,2332],"[dispatch, podcast, userInfo, podcastId, podcastPreview, checkIfMobile, getPodcastPreview]",[2444,2446],"[dispatch]",[1386,1405],"[dispatch, keyword, podcasts.length]",[1811,1820],"[desc, podcast, temp]",[1928,1941],"[chart, weatherData]"]